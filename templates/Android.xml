<templateSet group="Android">
  <template name="rvadapter" value="import android.view.LayoutInflater&#10;import android.view.ViewGroup&#10;import androidx.databinding.DataBindingUtil&#10;import androidx.recyclerview.widget.RecyclerView&#10;&#10;class $ClassName$ViewAdapter : RecyclerView.Adapter&lt;$ClassName$ViewAdapter.ViewHolder&gt;() {&#10;&#10;    var list: MutableList&lt;$DataModel$&gt; = mutableListOf()&#10;        private set(value) {&#10;            field = value&#10;            notifyDataSetChanged()&#10;        }&#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): $ClassName$ViewAdapter.ViewHolder {&#10;        val i = LayoutInflater.from(parent.context)&#10;        val b: $BindingClass$Binding = DataBindingUtil.inflate(i, R.layout.item_$LayoutFile$, parent, false)&#10;        return $ClassName$ViewAdapter.ViewHolder(b)&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: ViewHolder, position: Int): Unit = holder.bind(list[position])&#10;&#10;    override fun getItemCount(): Int = list.size&#10;&#10;    inner class ViewHolder(b: $BindingClass$Binding) : RecyclerView.ViewHolder(b.root) {&#10;        fun bind(item: $DataModel$) {&#10;        }&#10;    }&#10;}" shortcut="ENTER" description="" toReformat="true" toShortenFQNames="true">
    <variable name="ClassName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="DataModel" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="BindingClass" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="LayoutFile" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
</templateSet>